[{"C:\\Users\\ramyar\\Desktop\\my-app\\src\\index.js":"1","C:\\Users\\ramyar\\Desktop\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\ramyar\\Desktop\\my-app\\src\\theme\\theme.js":"3","C:\\Users\\ramyar\\Desktop\\my-app\\src\\layout\\main.js":"4","C:\\Users\\ramyar\\Desktop\\my-app\\src\\layout\\right_sidebar.js":"5","C:\\Users\\ramyar\\Desktop\\my-app\\src\\styles\\style.js":"6","C:\\Users\\ramyar\\Desktop\\my-app\\src\\layout\\left_sidebar.js":"7","C:\\Users\\ramyar\\Desktop\\my-app\\src\\midle_bar\\midle.js":"8","C:\\Users\\ramyar\\Desktop\\my-app\\src\\midle_bar\\midlebar_style.js":"9","C:\\Users\\ramyar\\Desktop\\my-app\\src\\midle_bar\\header\\header.js":"10","C:\\Users\\ramyar\\Desktop\\my-app\\src\\midle_bar\\header\\header_style.js":"11","C:\\Users\\ramyar\\Desktop\\my-app\\src\\midle_bar\\body\\tweet_list.js":"12","C:\\Users\\ramyar\\Desktop\\my-app\\src\\midle_bar\\body\\tweet_style.js":"13"},{"size":671,"mtime":1609079788951,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1608858513431,"results":"16","hashOfConfig":"15"},{"size":339,"mtime":1609007138163,"results":"17","hashOfConfig":"15"},{"size":671,"mtime":1609079806476,"results":"18","hashOfConfig":"15"},{"size":1950,"mtime":1608994595261,"results":"19","hashOfConfig":"15"},{"size":2827,"mtime":1609109136366,"results":"20","hashOfConfig":"15"},{"size":2694,"mtime":1609109380327,"results":"21","hashOfConfig":"15"},{"size":1519,"mtime":1609109429546,"results":"22","hashOfConfig":"15"},{"size":294,"mtime":1609103312324,"results":"23","hashOfConfig":"15"},{"size":1349,"mtime":1609087784403,"results":"24","hashOfConfig":"15"},{"size":1708,"mtime":1609109107017,"results":"25","hashOfConfig":"15"},{"size":2207,"mtime":1609107780602,"results":"26","hashOfConfig":"15"},{"size":1498,"mtime":1609108120456,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lhbeok",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ramyar\\Desktop\\my-app\\src\\index.js",[],"C:\\Users\\ramyar\\Desktop\\my-app\\src\\reportWebVitals.js",[],["58","59"],"C:\\Users\\ramyar\\Desktop\\my-app\\src\\theme\\theme.js",[],"C:\\Users\\ramyar\\Desktop\\my-app\\src\\layout\\main.js",["60","61","62"],"C:\\Users\\ramyar\\Desktop\\my-app\\src\\layout\\right_sidebar.js",["63","64","65","66"],"import { ButtonBase, Divider, Grid, Typography } from '@material-ui/core';\r\nimport { Style } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport Styles from '../styles/style';\r\n\r\nconst hashtag = ['پرچم_دار_جدید', 'کرونا_ویروس', 'ویروس_لامصب', 'ترامپ', 'جوبایدن']\r\n\r\nconst Right_sidebar = () => {\r\n\r\n    const css = Styles()\r\n\r\n\r\n    return (\r\n        <div className={css.right} >\r\n\r\n\r\n\r\n            <Grid container direction={\"row\"} alignContent={\"center\"} >\r\n                <Grid item>\r\n                    <img src={\"twitter.png\"} className={css.img} />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <ButtonBase>\r\n                        <Typography className={css.twiterfarsi}>\r\n                            توییتر فارسی\r\n                </Typography>\r\n                    </ButtonBase>\r\n                </Grid>\r\n                <ButtonBase>\r\n                    <Typography className={css.daghtariha}>\r\n                        داغ ترین هشتگ ها\r\n                    </Typography>\r\n                </ButtonBase>\r\n\r\n                <Grid container direction={\"column\"}>\r\n\r\n\r\n                    {\r\n                        hashtag.map((item) => {\r\n                            return <Grid container item alignContent={\"center\"} >\r\n                                <ButtonBase>\r\n                                    <img src={'hashtag.png'} className={css.hashtag} />\r\n\r\n\r\n                                    <Typography className={css.hashtagttext}>\r\n                                        {item}\r\n                                    </Typography>\r\n                                </ButtonBase>\r\n\r\n\r\n\r\n\r\n\r\n                            </Grid>\r\n                        })\r\n                    }\r\n\r\n                </Grid>\r\n\r\n\r\n            </Grid>\r\n     \r\n          \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Right_sidebar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\ramyar\\Desktop\\my-app\\src\\styles\\style.js",["67"],"C:\\Users\\ramyar\\Desktop\\my-app\\src\\layout\\left_sidebar.js",["68","69"],"C:\\Users\\ramyar\\Desktop\\my-app\\src\\midle_bar\\midle.js",[],"C:\\Users\\ramyar\\Desktop\\my-app\\src\\midle_bar\\midlebar_style.js",["70"],"C:\\Users\\ramyar\\Desktop\\my-app\\src\\midle_bar\\header\\header.js",["71"],"import Header_styles from './header_style'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { ButtonBase, Divider, Grid, IconButton, Typography } from '@material-ui/core';\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\n\r\n\r\n\r\nconst Header=()=>{\r\n\r\n    const hcss=Header_styles();\r\n\r\n\r\n\r\n\r\n    return( <div className={hcss.root}>\r\n       <div className={hcss.headerhome}>\r\n       <IconButton>\r\n       <HomeIcon/>\r\n       </IconButton>\r\n       <Typography className={hcss.hometext}>\r\n           خانه\r\n       </Typography>\r\n       \r\n       </div>\r\n       <Divider className={hcss.divider}/>\r\n\r\n       <Grid container direction={\"row\"} className={hcss.tweetme}>\r\n           <Grid item>\r\n              <img src={\"images/ramyar_pic.jpg\"}className={hcss.ramyar_pic}/>\r\n           </Grid>\r\n           <Grid item>\r\n             <textarea placeholder={'توییت کن...'} className={hcss.textarea}/>\r\n           </Grid>\r\n       </Grid>\r\n        <Grid container direction={\"row-reverse\"}>\r\n            <ButtonBase>\r\n            <button className={hcss.btn} type={\"submit\"}>توییت</button>\r\n            </ButtonBase>\r\n           <Grid item>\r\n           <IconButton><PhotoLibraryIcon className={hcss.img_upload}/></IconButton>\r\n           </Grid>\r\n\r\n        </Grid>\r\n\r\n\r\n    </div>\r\n\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default Header;\r\n","C:\\Users\\ramyar\\Desktop\\my-app\\src\\midle_bar\\header\\header_style.js",["72"],"C:\\Users\\ramyar\\Desktop\\my-app\\src\\midle_bar\\body\\tweet_list.js",["73"],"import { Grid, IconButton, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Tweetstyle from './tweet_style'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\n\r\n\r\n\r\n\r\nconst Tweetlist = ({name,id,img,caption,like}) => {\r\n    const listcss = Tweetstyle()\r\n\r\n\r\n\r\n    return (\r\n        <div className={listcss.root}>\r\n            <Grid container alignContent={\"center\"}>\r\n                <Grid item>\r\n                    <img src={img} className={listcss.imgprofiles} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography className={listcss.textProfiles}>\r\n                       {name}\r\n                 </Typography>\r\n\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography className={listcss.idprofiles}>\r\n                        {id}\r\n                 </Typography>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            <Grid container direction={\"column\"}>\r\n                <Grid item>\r\n                    <Typography className={listcss.captionProfiles}>\r\n                        بهترین وعده عذایی با اختلاف صبحانست، چون ممکن نیست برای <span style={{ color: \"#20b1ea\" }}>#صبحانه</span> کسی خورشت کرفس درست کنه\r\n                </Typography>\r\n                </Grid>\r\n                <Grid item container direction={\"row-reverse\"} alignItems={\"center\"}>\r\n                    <Grid items>\r\n                    <IconButton>\r\n                   < RepeatIcon className={listcss.repeaticon}/>\r\n                   </IconButton>\r\n                    </Grid>\r\n                    <Grid items>\r\n                        <IconButton>\r\n                            <FavoriteIcon className={listcss.heart_icon} />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid items>\r\n                        <Typography className={listcss.like}>\r\n                            {like}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\nexport default Tweetlist;","C:\\Users\\ramyar\\Desktop\\my-app\\src\\midle_bar\\body\\tweet_style.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":18,"column":10,"nodeType":"80","endLine":18,"endColumn":26},{"ruleId":"78","severity":1,"message":"81","line":20,"column":10,"nodeType":"80","endLine":20,"endColumn":22},{"ruleId":"78","severity":1,"message":"82","line":22,"column":10,"nodeType":"80","endLine":22,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":1,"column":22,"nodeType":"85","messageId":"86","endLine":1,"endColumn":29},{"ruleId":"83","severity":1,"message":"87","line":2,"column":10,"nodeType":"85","messageId":"86","endLine":2,"endColumn":15},{"ruleId":"88","severity":1,"message":"89","line":20,"column":21,"nodeType":"80","endLine":20,"endColumn":68},{"ruleId":"88","severity":1,"message":"89","line":43,"column":37,"nodeType":"80","endLine":43,"endColumn":88},{"ruleId":"90","severity":1,"message":"91","line":116,"column":9,"nodeType":"92","messageId":"93","endLine":116,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":12,"column":17,"nodeType":"80","endLine":12,"endColumn":60},{"ruleId":"88","severity":1,"message":"89","line":70,"column":17,"nodeType":"80","endLine":70,"endColumn":82},{"ruleId":"83","severity":1,"message":"94","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":29,"column":15,"nodeType":"80","endLine":29,"endColumn":78},{"ruleId":"90","severity":1,"message":"95","line":74,"column":9,"nodeType":"92","messageId":"93","endLine":74,"endColumn":15},{"ruleId":"88","severity":1,"message":"89","line":19,"column":21,"nodeType":"80","endLine":19,"endColumn":70},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react/jsx-pascal-case","Imported JSX component Right_sidebar must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Midle_bar must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Left_sidebar must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'Style' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-dupe-keys","Duplicate key 'fontWeight'.","ObjectExpression","unexpected","'Midle_bar' is defined but never used.","Duplicate key 'border'.","no-global-assign","no-unsafe-negation"]